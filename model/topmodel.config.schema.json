{
  "$id": "topmodel.config.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "description": "Fichier de config du générateur",
  "required": [
    "app"
  ],
  "properties": {
    "app": {
      "type": "string",
      "description": "Nom de l'application."
    },
    "noWarn": {
      "type": "array",
      "description": "Liste des warnings à ignorer.",
      "items": {
        "type": "string",
        "description": "Code du warning (TMDXXXX) à ignorer "
      }
    },
    "modelRoot": {
      "type": "string",
      "description": "Chemin du dossier racine qui contient tous les fichiers tmd du modèle, qui seront chargés par le générateur (à l'exception du fichier de domaines qui est chargé à part). Si non renseigné, le dossier contenant le fichier de config sera utilisé."
    },
    "lockFileName": {
      "type": "string",
      "description": "Nom du fichier de lock",
      "default": "topmodel.lock"
    },
    "pluralizeTableNames": {
      "type": "boolean",
      "description": "Utilise le nom au pluriel des classes pour générer leur noms de table SQL."
    },
    "useLegacyRoleNames": {
      "type": "boolean",
      "description": "Transforme les noms de rôles d'associations en upper case (au lieu de constant case) pour déterminer le nom SQL des propriétés",
      "default": "false"
    },
    "useLegacyAssociationCompositionMappers": {
      "type": "boolean",
      "description": "Permet de mapper les compositions OneToMany et ManyToMany à des compositions avec un kind non null. Sans garantie de résultat...",
      "default": false
    },
    "i18n": {
      "type": "object",
      "description": "Configuration de la localisation de l'application.",
      "additionalProperties": false,
      "properties": {
        "rootPath": {
          "type": "string",
          "description": "Template du chemin des dossiers de traductions entrants. Doit contenir le template {lang}",
          "default": "{lang}"
        },
        "defaultLang": {
          "type": "string",
          "description": "Langue par défaut de l'application."
        },
        "langs": {
          "type": "array",
          "description": "Liste des langues de l'application (autre que la langue par défaut).",
          "items": {
            "type": "string",
            "description": "Code du langage"
          }
        },
        "translateReferences": {
          "type": "boolean",
          "description": "Si les libellés des listes de références doivent être traduits.",
          "default": "true"
        },
        "translateProperties": {
          "type": "boolean",
          "description": "Si les libellés des propriétés doivent être traduits.",
          "default": "true"
        }
      }
    },
    "generators": {
      "type": "array",
      "description": "Chemins vers des projets C# contenant des générateurs personnalisés",
      "items": {
        "type": "string"
      }
    },
    "ignoredFiles": {
      "type": "array",
      "description": "Liste des fichiers à ignorer après première génération (relatif au fichier de config).",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "path",
          "comment"
        ],
        "properties": {
          "path": {
            "type": "string",
            "description": "Chemin du fichier à ignorer, relatif au fichier de config."
          },
          "comment": {
            "type": "string",
            "description": "Motif."
          }
        }
      }
    },
    "csharp": {
      "type": "array",
      "items": {
        "type": "object",
        "description": "Config pour la génération de C#.",
        "additionalProperties": false,
        "required": [
          "outputDirectory",
          "tags"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nom de cette configuration."
          },
          "language": {
            "oneOf": [
              {
                "type": "string",
                "description": "Langage du générateur, utilisé pour choisir l'implémentation correspondante des domaines, décorateurs et convertisseurs",
                "default": "csharp"
              },
              {
                "type": "array",
                "description": "Langages du générateur, utilisés pour choisir l'implémentation correspondante des domaines, décorateurs et convertisseurs. Les différentes options sont testées dans l'ordre de définition, la première pour laquelle il existe une implémentation est sélectionnée",
                "default": "csharp",
                "items": {
                  "type": "string",
                  "description": "Langage du générateur, utilisé pour choisir l'implémentation correspondante des domaines, décorateurs et convertisseurs. Par défaut : 'csharp'.",
                  "default": "csharp"
                }
              }
            ]
          },
          "tags": {
            "type": "array",
            "description": "Précise les tags de fichier que le générateur doit lire",
            "items": {
              "type": "string",
              "description": "Catégorie de fichier que le générateur doit lire."
            }
          },
          "referencedTags": {
            "type": "object",
            "description": "Tags d'autres configs dont les classes peuvent être référencées dans le code généré par les générateurs de ce module.",
            "additionalProperties": {
              "type": "string",
              "description": "Le nom de la config dans laquelle aller chercher le tag."
            }
          },
          "variables": {
            "type": "object",
            "description": "Définitions de variables à utiliser dans les différents paramètres du générateur.",
            "patternProperties": {
              ".+": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              }
            }
          },
          "tagVariables": {
            "type": "object",
            "description": "Définitions de variables par tag à utiliser dans les différents paramètres du générateur.",
            "patternProperties": {
              ".*": {
                "type": "object",
                "patternProperties": {
                  ".*": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "boolean"
                      }
                    ]
                  }
                }
              }
            }
          },
          "disable": {
            "type": "array",
            "description": "Désactive les générateurs demandés",
            "items": {
              "type": "string",
              "enum": [
                "CSharpClassGen",
                "CSharpMapperGen",
                "CSharpDbContextGen",
                "CSharpRefAccessGen",
                "CSharpApiServerGen",
                "CSharpApiClientGen"
              ]
            }
          },
          "outputDirectory": {
            "type": "string",
            "description": "Racine du répertoire de génération."
          },
          "translateReferences": {
            "type": "boolean",
            "description": "Si les libellés des listes de références doivent être traduits.",
            "default": "true"
          },
          "translateProperties": {
            "type": "boolean",
            "description": "Si les libellés des propriétés doivent être traduits.",
            "default": "true"
          },
          "ignoreDefaultValues": {
            "type": "boolean",
            "description": "Désactive la génération des valeurs par défaut des propriétés dans les classes et endpoints générés avec cette configuration."
          },
          "persistentModelPath": {
            "type": "string",
            "description": "Localisation du modèle persisté, relative au répertoire de génération. Par défaut : {app}.{module}.Models."
          },
          "referencesModelPath": {
            "type": "string",
            "description": "Localisation des classes de références, relative au répertoire de génération. Si non renseigné, ces classes seront générées comme les autres (selon si elles sont persistantes ou non)."
          },
          "nonPersistentModelPath": {
            "type": "string",
            "description": "Localisation du modèle non persisté, relative au répertoire de génération. Par défaut : {app}.{module}.Models/Dto."
          },
          "apiRootPath": {
            "type": "string",
            "description": "Localisation du l'API générée (client ou serveur), relative au répertoire de génération. Par défaut : {app}.Web."
          },
          "apiFilePath": {
            "type": "string",
            "description": "Chemin vers lequel sont créés les fichiers d'endpoints générés, relative à la racine de l'API. Par défaut : {module:path}."
          },
          "apiGeneration": {
            "oneOf": [
              {
                "type": "string",
                "description": "Mode de génération de l'API ('Client' ou 'Server')",
                "enum": [
                  "Client",
                  "Server"
                ]
              },
              {
                "type": "string",
                "description": "Mode de génération de l'API ('Client' ou 'Server')",
                "pattern": "^\\{[^\\}]+\\}$"
              }
            ]
          },
          "dataFlowsPath": {
            "type": "string",
            "description": "Localisation des flux de données générés."
          },
          "useEFMigrations": {
            "type": "boolean",
            "description": "Utilise les migrations EF pour créer/mettre à jour la base de données. Par défaut : 'true'."
          },
          "dbContextPath": {
            "type": "string",
            "description": "Localisation du DbContext, relative au répertoire de génération."
          },
          "dbContextName": {
            "type": "string",
            "description": "Nom du DbContext. Par défaut : {app}DbContext."
          },
          "referenceAccessorsInterfacePath": {
            "type": "string",
            "description": "Chemin vers lequel générer les interfaces d'accesseurs de référence."
          },
          "referenceAccessorsImplementationPath": {
            "type": "string",
            "description": "Chemin vers lequel générer les implémentation d'accesseurs de référence. Par défaut : {DbContextPath}/Reference."
          },
          "referenceAccessorsName": {
            "type": "string",
            "description": "Nom des accesseurs de référence (préfixé par 'I' pour l'interface, puis 'Db' pour les accesseurs persistés). Par défaut : {module}ReferenceAccessors. (La variable `{module}` aura toujours la transformation `flat` ajoutée)."
          },
          "mappersName": {
            "type": "string",
            "description": "Nom des mappers. Par défaut : {module}Mappers. (La variable `{module}` aura toujours la transformation `flat` ajoutée)."
          },
          "noAsyncControllers": {
            "type": "boolean",
            "description": "Génère des contrôleurs d'API synchrones."
          },
          "useLowerCaseSqlNames": {
            "type": "boolean",
            "description": "Utilise des noms de tables et de colonnes en lowercase. Par défaut : 'true'."
          },
          "dbSchema": {
            "type": "string",
            "description": "Le nom du schéma de base de données à cibler (si non renseigné, EF utilise 'dbo')."
          },
          "kinetix": {
            "type": "boolean",
            "description": "Si on génère avec Kinetix."
          },
          "domainNamespace": {
            "type": "string",
            "description": "Namespace de l'enum de domaine pour Kinetix. Par défaut : '{app}.Common'."
          },
          "valueTypes": {
            "type": "array",
            "description": "Types C# que le générateur doit considérer comme étant types valeurs (en plus des plus standard comme 'int', 'bool' ou 'DateTime'), qu'il faudra wrapper dans un `Nullable` (avec un `?`) pour les rendre nullables.",
            "items": {
              "type": "string"
            }
          },
          "nullableEnable": {
            "type": "boolean",
            "description": "Prend en compte l'activation du paramètre `nullable: enable` dans le code généré (pour ajouter des `?` derrière les types références nullables)."
          },
          "requiredNonNullable": {
            "oneOf": [
              {
                "type": "boolean",
                "description": "Génère des types non-nullables pour les propriétés obligatoires."
              },
              {
                "type": "string",
                "description": "Génère des types non-nullables pour les propriétés obligatoires.",
                "pattern": "^\\{[^\\}]+\\}$"
              }
            ]
          },
          "noColumnOnAlias": {
            "type": "boolean",
            "description": "Ne génère pas les attributs de colonnes sur les alias dans les classes non persistées. Par défaut : 'true'."
          },
          "noPersistence": {
            "oneOf": [
              {
                "type": "boolean",
                "description": "Considère tous les classes comme étant non-persistantes (= pas d'attribut SQL)."
              },
              {
                "type": "string",
                "description": "Considère tous les classes comme étant non-persistantes (= pas d'attribut SQL).",
                "pattern": "^\\{[^\\}]+\\}$"
              }
            ]
          },
          "mapperTagsOverrides": {
            "type": "array",
            "description": "Si un mapper contient au moins une classe de ces tags, alors il sera généré avec les tags de cette classe (au lieu du comportement par défaut qui priorise les tags de la classe persistée puis de celle qui définit le mapper).",
            "items": {
              "type": "string"
            }
          },
          "mapperLocationPriority": {
            "type": "string",
            "description": "Détermine le type de classe prioritaire pour déterminer la localisation des mappers générés (`persisted` ou `non-persisted`). Par défaut : 'persisted'",
            "enum": [
              "persisted",
              "non-persisted"
            ]
          },
          "enumsForStaticReferences": {
            "type": "boolean",
            "description": "Utilise des enums au lieu de strings pour les PKs de listes de référence statiques. Par défaut : 'true'."
          },
          "useEFComments": {
            "type": "boolean",
            "description": "Annote les tables et les colonnes générées par EF avec les commentaires du modèle (nécessite `UseEFMigrations`)."
          },
          "useRecords": {
            "type": "boolean",
            "description": "Utilise des records (mutables) au lieu de classes pour la génération de classes. Par défaut : 'true'."
          },
          "usePrimaryConstructors": {
            "type": "boolean",
            "description": "Utilise les constructeurs principaux pour la génération des classes avec dépendances (clients d'API, accesseurs de références). Par défaut : 'true'."
          },
          "useCancellationTokens": {
            "type": "boolean",
            "description": "Ajoute un CancellationToken en paramètre des endpoints générés (client et serveur)."
          },
          "resourcesResxPath": {
            "type": "string",
            "description": "Chemin vers les fichiers de resources (*.resx) à générer pour les traductions de libellés de propriétés et de listes de références."
          },
          "resourcesInResx": {
            "type": "string",
            "description": "Précise les resources à générer dans les fichiers resx (si `resourcesResxPath` est renseigné), au lieu de les générer en base de données.",
            "enum": [
              "all",
              "properties",
              "references"
            ]
          }
        }
      }
    },
    "javascript": {
      "type": "array",
      "items": {
        "type": "object",
        "description": "Config pour la génération de Javascript.",
        "additionalProperties": false,
        "required": [
          "outputDirectory",
          "tags"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nom de cette configuration."
          },
          "language": {
            "oneOf": [
              {
                "type": "string",
                "description": "Langage du générateur, utilisé pour choisir l'implémentation correspondante des domaines, décorateurs et convertisseurs",
                "default": "javascript"
              },
              {
                "type": "array",
                "description": "Langages du générateur, utilisés pour choisir l'implémentation correspondante des domaines, décorateurs et convertisseurs. Les différentes options sont testées dans l'ordre de définition, la première pour laquelle il existe une implémentation est sélectionnée",
                "default": "javascript",
                "items": {
                  "type": "string",
                  "description": "Langage du générateur, utilisé pour choisir l'implémentation correspondante des domaines, décorateurs et convertisseurs.",
                  "default": "javascript"
                }
              }
            ]
          },
          "tags": {
            "type": "array",
            "description": "Précise les tags de fichier que le générateur doit lire",
            "items": {
              "type": "string",
              "description": "Catégorie de fichier que le générateur doit lire."
            }
          },
          "referencedTags": {
            "type": "object",
            "description": "Tags d'autres configs dont les classes peuvent être référencées dans le code généré par les générateurs de ce module.",
            "additionalProperties": {
              "type": "string",
              "description": "Le nom de la config dans laquelle aller chercher le tag."
            }
          },
          "variables": {
            "type": "object",
            "description": "Définitions de variables à utiliser dans les différents paramètres du générateur.",
            "patternProperties": {
              ".+": {
                "type": "string"
              }
            }
          },
          "tagVariables": {
            "type": "object",
            "description": "Définitions de variables par tag à utiliser dans les différents paramètres du générateur.",
            "patternProperties": {
              ".*": {
                "type": "object",
                "patternProperties": {
                  ".*": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "disable": {
            "type": "array",
            "description": "Désactive les générateurs demandés",
            "items": {
              "type": "string",
              "enum": [
                "JSDefinitionGen",
                "JSReferenceGen",
                "JSNGApiClientGen",
                "JSApiClientGen",
                "JSResourceGen"
              ]
            }
          },
          "outputDirectory": {
            "type": "string",
            "description": "Racine du répertoire de génération."
          },
          "ignoreDefaultValues": {
            "type": "boolean",
            "description": "Désactive la génération des valeurs par défaut des propriétés dans les classes et endpoints générés avec cette configuration."
          },
          "rootModule": {
            "type": "string",
            "description": "Définition du module racine, pour les différents regroupements à faire dessus (fichiers de traductions...).",
            "default": "{module:head}"
          },
          "modelRootPath": {
            "type": "string",
            "description": "Localisation du modèle, relative au répertoire de génération. Si non renseigné, aucun modèle ne sera généré. Si '{module}' n'est pas présent dans le chemin, alors il sera ajouté à la fin."
          },
          "resourceRootPath": {
            "type": "string",
            "description": "Localisation des ressources i18n, relative au répertoire de génération. Si non renseigné, aucun fichier ne sera généré. Si '{lang}' n'est pas présent dans le chemin, alors il sera ajouté à la fin."
          },
          "apiClientRootPath": {
            "type": "string",
            "description": "Localisation des clients d'API, relative au répertoire de génération. Si non renseigné, aucun fichier ne sera généré."
          },
          "apiClientFilePath": {
            "type": "string",
            "description": "Chemin vers lequel sont créés les fichiers d'endpoints générés, relatif à la racine de l'API. En mode Angular, la valeur par défaut est `{module}/{fileName}.service`",
            "default": "{module}/{fileName}"
          },
          "fetchPath": {
            "type": "string",
            "description": "Chemin ou import vers un 'fetch' personnalisé, relatif au répertoire de génération s'il commence par un '.'."
          },
          "domainPath": {
            "type": "string",
            "description": "Chemin ou import vers le fichier 'domain', relatif au répertoire de génération s'il commence par un '.'.",
            "default": "../domains"
          },
          "apiMode": {
            "type": "string",
            "description": "Framework cible pour la génération.",
            "default": "focus",
            "enum": [
              "angular",
              "angular_promise",
              "vanilla",
              "nuxt"
            ]
          },
          "entityMode": {
            "type": "string",
            "description": "Framework cible pour la génération.",
            "default": "typed",
            "enum": [
              "untyped",
              "typed",
              "none"
            ]
          },
          "extendedCompositions": {
            "type": "boolean",
            "description": "Génère `isRequired`, `label` (et `comment`) sur les compositions dans les entitées typées."
          },
          "entityTypesPath": {
            "type": "string",
            "description": "Chemin d'import des type d'entités",
            "default": "@focus4/stores"
          },
          "resourceMode": {
            "type": "string",
            "description": "Mode de génération (JS, JSON ou JSON Schema).",
            "enum": [
              "js",
              "json"
            ]
          },
          "translateReferences": {
            "type": "boolean",
            "description": "Si les listes de référence doivent être traduites",
            "default": "true"
          },
          "translateProperties": {
            "type": "boolean",
            "description": "Si les libellés des propriétés doivent être traduits",
            "default": "true"
          },
          "generateComments": {
            "type": "boolean",
            "description": "Ajoute les commentaires dans les entités JS générées."
          },
          "generateMainResourceFiles": {
            "type": "boolean",
            "description": "Génère un fichier 'index.ts' qui importe et réexporte tous les fichiers de resources générés par langue. Uniquement compatible avec `resourceMode: js`."
          },
          "referenceMode": {
            "type": "string",
            "description": "Mode de génération des listes de références (définitions ou valeurs).",
            "enum": [
              "definition",
              "values"
            ],
            "default": "definition"
          }
        }
      }
    },
    "translation": {
      "type": "array",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "outputDirectory",
          "tags"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nom de cette configuration."
          },
          "tags": {
            "type": "array",
            "description": "Précise les tags de fichier que le générateur doit lire",
            "items": {
              "type": "string",
              "description": "Catégorie de fichier que le générateur doit lire."
            }
          },
          "referencedTags": {
            "type": "object",
            "description": "Tags d'autres configs dont les classes peuvent être référencées dans le code généré par les générateurs de ce module.",
            "additionalProperties": {
              "type": "string",
              "description": "Le nom de la config dans laquelle aller chercher le tag."
            }
          },
          "variables": {
            "type": "object",
            "description": "Définitions de variables à utiliser dans les différents paramètres du générateur.",
            "patternProperties": {
              ".+": {
                "type": "string"
              }
            }
          },
          "disable": {
            "type": "array",
            "description": "Désactive les générateurs demandés",
            "items": {
              "type": "string",
              "enum": [
                "JTranslationOutGen"
              ]
            }
          },
          "outputDirectory": {
            "type": "string",
            "description": "Racine du répertoire de génération."
          },
          "translateReferences": {
            "type": "boolean",
            "description": "Si les libellés des listes de références doivent être traduits.",
            "default": "true"
          },
          "translateProperties": {
            "type": "boolean",
            "description": "Si les libellés des propriétés doivent être traduits.",
            "default": "true"
          },
          "ignoreDefaultValues": {
            "type": "boolean",
            "description": "Désactive la génération des valeurs par défaut des propriétés dans les classes et endpoints générés avec cette configuration."
          },
          "rootModule": {
            "type": "string",
            "description": "Définition du module racine, pour les différents regroupements à faire dessus (fichiers de traductions...).",
            "default": "{module:head}"
          },
          "rootPath": {
            "type": "string",
            "description": "Template du chemin des dossiers de traductions sortants (manquants). Doit contenir le template {lang}",
            "default": "{lang}"
          },
          "defaultLang": {
            "type": "string",
            "description": "Langue par défaut (celle dans laquelle sont écris les labels dans les fichiers .tmd"
          },
          "langs": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Code du angage"
            }
          }
        }
      }
    }
  },
  "additionalProperties": false
}